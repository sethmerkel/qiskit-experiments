---
other:
  - |
    Qiskit 0.23.0 began phasing out support of complex parameters
    in the Pulse module. Mainly, all library symbolic pulses were converted
    from complex amplitude representation to a duo of real (float) parameters
    (``amp``, ``angle``). To avoid problems, Qiskit Experiments adopted this convention.
    
    Changes were made to :class:`.FixedFrequencyTransmon` and :class:`.HalfAngleCal`
    (see upgrade section). With the exception of :class:`.HalfAngleCal`, all 
    library experiments should continue to function as they did before (even with 
    complex ``amp``). When used with the :class:`.FixedFrequencyTransmon` library, 
    :class:`.HalfAngleCal` will also continue working as before.
    
    Eventually, support for complex parameters will be dropped altogether, and it is
    thus pending deprecation - including for saving and loading calibration data with
    complex values.
upgrade_calibration:
  - |
    The representation of pulses in the :class:`.FixedFrequencyTransmon` library 
    was changed from complex amplitude to (``amp``, ``angle``) representation. All pulses
    now include an ``angle`` parameter, and the default values of ``amp`` are set
    as type ``float`` instead of ``complex``.
upgrade_explib:
  - |
    :class:`.HalfAngleCal` was changed from updating the complex amplitude of 
    the pulse, to updating the angle in the (``amp``, ``angle``) representation. When used with
    the :class:`.FixedFrequencyTransmon` library, it will continue to work seamlessly 
    in the new representation. However, when the experiment is used with custom
    built pulses, which rely on the old convention of complex ``amp`` (with no
    angle parameter) - the experiment will fail. Most reasonable cases will raise
    a detailed ``CalibrationError`` explaining the change and the way to adjust
    to it. Some edge cases - like a custom built pulse with an ``angle`` parameter
    which doesn't conform to the naming convention of Qiskit's 
    ``ScalableSymbolicPulse`` class, or using a loaded calibration with ``complex`` 
    ``amp`` - will result in updating the wrong parameter. 
    
