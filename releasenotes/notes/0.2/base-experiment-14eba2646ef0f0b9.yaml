---
features:
  - |
    The ``analysis`` kwarg of
    :meth:`qiskit_experiments.framework.BaseExperiment.run` can now optionally
    be passed a :class:`qiskit_experiments.framework.BaseAnalysis` instance to
    use for analysis of that single execution. If no instance is provided the
    current stored :meth:`~qiskit_experiments.framework.BaseExperiment.analysis`
    instance for that experiment will be used. Setting ``analysis=None`` disables
    analysis for the specific execution.
  - |
    Added ``backend`` as an optional ``__init__`` kwarg for all experiments to
    allow setting the backend at initialization. The backand can also be set
    and retrieved from the experiment object after construction using the
    :meth:`~qiskit_experiments.framework.BaseExperiment.backend`
    property and setter.

    When using the ``backend`` kwarg of
    :meth:`~qiskit_experiments.framework.BaseExperiment.run` to specify
    a backend this will temporarily override any currently set backends
    for that single execution.
  - |
    Added :class:`~qiskit_experiments.framework.ExperimentConfig` dataclass
    for storing the configuration of an experiment. This configuration can
    be obtained by using the
    :meth:`~qiskit_experiments.framework.BaseExperiment.config` property.
    Experiments can also be reconstructed from their configuration using
    the :meth:`~qiskit_experiments.framework.BaseExperiment.from_config`
    class method.
  - |
    Added automatic job splitting to
    :class:`~qiskit_experiments.framework.BaseExperiment` for execution of
    experiments with a larger number of circuits than can be run in a single
    job on the target backend. This enables running large experiments on
    legacy and non-IBM backends that don't handle job splitting
    automatically.
upgrade:
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property
    has been changed to return a :class:`qiskit_experiments.framework.BaseAnalysis`
    *instance* rather than a class type. This method also now has a setter
    which allows setting an analysis instance for use by an experiment.
deprecations:
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.set_analysis_options`
    method has been deprecated, use the
    :meth:`qiskit_experiments.framework.BaseAnalysis.set_options` method
    for the experiments analysis class instead. This can be accessed from the
    experiment instance using the 
    :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property as
    ``experiment.analysis.set_options(**options)``.
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.analysis_options`
    property has been deprecated, use the
    :meth:`qiskit_experiments.framework.BaseAnalysis.options` property
    for the experiments analysis class instead. This can be accessed from the
    experiment instance using the 
    :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property as
    ``experiment.analysis.options``.
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.run_analysis` and
    method has been deprecated, use the
    :meth:`qiskit_experiments.framework.BaseAnalysis.run` method
    for the experiments analysis class instead. This can be accessed from the
    experiment instance using the 
    :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property as
    ``experiment.analysis.run(**kwargs)``.
  - |
    Boolean values for the ``analysis`` kwarg in
    :meth:`qiskit_experiments.framework.BaseExperiment.run` have been deprecated.
    Use ``analysis="default"`` instead of ``analysis=True``, and
    ``analysis=None`` instead of ``analysis=False``.
  - |
    Using the ``__analysis_class__`` class attrbiute to define a default
    :class:`~qiskit_experiments.framework.BaseAnalysis` class in a
    :class:`~qiskit_experiments.framework.BaseExperiment` subclass has
    been deprecated. A default analysis class instance should now be passed to
    the initialization method of
    :class:`~qiskit_experiments.framework.BaseExperiment` instead.
developer:
  - |
    The :class:`qiskit_experiments.framework.BaseExperiment` class has
    been changed to optionally store an instance of a
    :class:`qiskit_experiments.framework.BaseAnalysis` class  during
    its initialization. Any default analysis options specific to a
    particular experiment subclass should be set during that experiments
    init method, or as default options of the analysis subclass used by
    that experiment.
  - |
    Added a ``_set_backend`` method to
    :class:`~qiskit_experiments.framework.BaseExperiment` that is called
    when a backend is set via initialization or the ``backend`` setter. This
    can be overridden in experiment subclasses if required. For example this
    could be used to extract any needed configuration or properties from the
    specified backend, or to update experiment options of configuration based
    on the backend.