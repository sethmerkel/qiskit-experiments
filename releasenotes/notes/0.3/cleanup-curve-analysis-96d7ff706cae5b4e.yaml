---
upgrade:
  - |
    :class:`.BaseCurveAnalysis` class has been added as a superclass of :class:`.CurveAnalysis`.
    The new base class doesn't define the :meth:`_run_analysis` abstract method
    and it cannot conduct analysis by itself, however it defines several subroutines 
    that can be combined to build a custom fitting process in the subclass.
    This allows more flexibility to write custom curve analysis by 
    directly inheriting from the new base class. See :class:`.BaseCurveAnalysis` for details.
    See also `Issue 737 <https://github.com/Qiskit-Extensions/qiskit-experiments/issues/737>`_ for discussion.
  - |
    The method :meth:`CurveAnalysis._generate_fit_guesses` has been upgraded with
    a new method signature. Now this method is called with ``curve_data`` argument
    that provides dataset which is used for curve fitting.
    If you define custom :class:`.CurveAnalysis` subclass in your codestack,
    you may need to upgrade the method. See :class:`.BaseCurveAnalysis` for details.
  - | 
    Arguments of :class:`.FitData` have been updated to take ``x_data`` and ``y_data``
    instead of ``x_range`` and ``y_range``.
deprecations:
  - |
    Several protected methods of :class:`.CurveAnalysis` intended to be overriden
    or directly be used by subclass have been deprecated.
    :meth:`CurveAnalysis._data` has been deprecated without alternative method
    to make :class:`.CurveAnalysis` state cleaner. Now relevent curve analysis methods
    requiring curve data are called with the ``curve_data`` argument.
    :meth:`CurveAnalysis._extra_database_entry` has also been deprecated.
    This method becomes a part of :meth:`CurveAnalysis._create_analysis_results`.
    Analysis class author can override this method to inject a code to create
    custom analysis results.
